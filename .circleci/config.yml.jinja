# WARNING: config.yml file is generated from config.yml.jinja
---
version: 3
jobs:
    tracetool:
        docker:
            - image: codaprotocol/coda:toolchain-rust-b2e9fa0d25f2f9b7c7f01d6f8727e2c6c7690712
        steps:
            - checkout
            - run: git submodule sync && git submodule update --init --recursive
            - run:
                  name: Build trace-tool
                  command: cd src/app/trace-tool && cargo build --frozen

    build-wallet:
        macos:
            xcode: "10.1.0"
        steps:
            - checkout
            - run: cd frontend/wallet && npm install
            - run:
                  name: Lint wallet
                  command: cd frontend/wallet && npm run reformat && git diff --exit-code src
            - run:
                  name: Build wallet
                  command: cd frontend/wallet && npm run build

    lint:
        docker:
            - image: codaprotocol/coda:toolchain-0c5f0ad97e6a7a4c50ef6c47b75924a24fa6e05f
        steps:
            - checkout
            - run: git submodule sync && git submodule update --init --recursive
            - run:
                  name: Check circle CI configuration rendering
                  command: ./scripts/test.py render --check .circleci/config.yml.jinja
            - run:
                  name: OCamlformat (make check-format)
                  command: eval `opam config env` && make check-format
            - run:
                  name: Snarky tracks master (make check-snarky-submodule)
                  command: make check-snarky-submodule

    build-macos:
        macos:
            xcode: "10.1.0"
        working_directory: /Users/distiller/coda
        environment:
            HOMEBREW_LOGS: /Users/distiller/homebrew.log
            OPAMYES: 1
        steps:
            - run:
                name: Make /nix paths
                command: |
                    sudo mkdir /nix
                    sudo chown distiller /nix
            - checkout
            - restore_cache:
                  keys:
                      - homebrew-v1-{{'{{'}} checksum "scripts/macos-setup.sh" {{'}}'}}
                      - homebrew-v1-
            - restore_cache:
                  keys:
                      - opam-v2-{{'{{'}} checksum "src/opam.export" {{'}}'}}
                      - opam-v2-
            - run: git submodule sync && git submodule update --init --recursive
            - run:
                  name: Download Deps -- make macos-setup-download
                  command: ./scripts/skip_if_only_frontend.sh make macos-setup-download
            - run:
                  name: Compile Deps -- make macos-setup-compile
                  command: ./scripts/skip_if_only_frontend.sh make macos-setup-compile
            - save_cache:
                  key: homebrew-v1-{{'{{'}} checksum "scripts/macos-setup.sh" {{'}}'}}
                  paths:
                      - "/usr/local/Homebrew"
                      - "/Users/distiller/Library/Caches/Homebrew"
            - save_cache:
                  key: opam-v2-{{'{{'}} checksum "src/opam.export" {{'}}'}}
                  paths:
                      - "/Users/distiller/.opam"
            - run:
                  name: Build OCaml
                  command: ./scripts/skip_if_only_frontend.sh bash -c 'eval `opam config env` && make build 2>&1 | tee /tmp/buildocaml.log'
            - run:
                  name: Record Constraint System Digests
                  command: ./scripts/skip_if_only_frontend.sh bash -c 'src/_build/default/app/cli/src/coda.exe client constraint-system-digests | tee /tmp/constraint-system-digests.log'
            - run:
                  name: Run all tests (on master)
                  command: echo "FIXME Tests not yet working on mac"

    {%- for profile in build_artifact_profiles %}
    build-artifacts--{{profile}}:
        resource_class: large
        docker:
            - image: codaprotocol/coda:toolchain-0c5f0ad97e6a7a4c50ef6c47b75924a24fa6e05f
        environment:
            DUNE_PROFILE: {{profile}}
        steps:
            - checkout
            - run: mkdir -p /tmp/artifacts
            - run: git submodule sync && git submodule update --init --recursive
            - run:
                  name: Download Stable Proving Keys
                  command: ./scripts/skip_if_only_frontend.sh scripts/getkeys.sh
            - run:
                  name: Build OCaml
                  command: ./scripts/skip_if_only_frontend.sh bash -c 'eval `opam config env` && make build 2>&1 | tee /tmp/artifacts/buildocaml.log'
            - run:
                  name: Build deb Package with keys
                  command: ./scripts/skip_if_only_frontend.sh make deb
            - run:
                  name: Store Generated Proving and Verifying Keys
                  command: ./scripts/skip_if_only_frontend.sh make provingkeys
            - run:
                  name: Store Genesis Public/Private Keypairs
                  command: ./scripts/skip_if_only_frontend.sh make genesiskeys
            - run:
                  name: Upload deb to repo
                  command: ./scripts/skip_if_only_frontend.sh make publish_deb
            - run:
                  name: Record Constraint System Digests
                  command: ./scripts/skip_if_only_frontend.sh bash -c 'src/_build/default/app/cli/src/coda.exe client constraint-system-digests | tee /tmp/artifacts/constraint-system-digests.log'
            - store_artifacts:
                  path: /tmp/artifacts
            - run:
                  name: Copy artifacts to Google Cloud
                  command: ./scripts/skip_if_only_frontend.sh scripts/artifacts.sh
    {%- endfor %}

    {%- for profile in unit_test_profiles %}
    test-unit--{{profile}}:
        resource_class: large
        docker:
            - image: codaprotocol/coda:toolchain-0c5f0ad97e6a7a4c50ef6c47b75924a24fa6e05f
        steps:
            - checkout
            - run: git submodule sync && git submodule update --init --recursive
            - run:
                  name: Run unit tests
                  command: source ~/.profile && ./scripts/skip_if_only_frontend.sh bash -c 'dune build --profile={{profile}} -j8 && dune runtest --profile={{profile}} -j8'
    {%- endfor %}

    {%- for profile in test_permutations.keys() | sort %}
    {%- for test in test_permutations[profile] %}
    test--{{profile}}--{{'--'.join(test.split(' '))}}:
        resource_class: large
        docker:
            - image: codaprotocol/coda:toolchain-0c5f0ad97e6a7a4c50ef6c47b75924a24fa6e05f
        steps:
            - checkout
            - run: git submodule sync && git submodule update --init --recursive
            - run:
                  name: Running test - {{profile}}:{{test}}
                  command: source ~/.profile && ./scripts/skip_if_only_frontend.sh ./scripts/test.py run '{{profile}}:{{test}}'
    {%- endfor %}
    {%- endfor %}

workflows:
    version: 2
    coda_parallel:
        jobs:
            - lint
            - tracetool
            - build-macos
            - build-wallet
            {%- for profile in build_artifact_profiles %}
            - build-artifacts--{{profile}}
            {%- endfor %}
            {%- for profile in unit_test_profiles %}
            - test-unit--{{profile}}
            {%- endfor %}
            {%- for profile in test_permutations.keys() | sort %}
            {%- for test in test_permutations[profile] %}
            - test--{{profile}}--{{'--'.join(test.split(' '))}}
            {%- endfor %}
            {%- endfor %}
