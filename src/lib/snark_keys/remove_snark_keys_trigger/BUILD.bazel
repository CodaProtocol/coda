## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load("@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_ns"
)
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "string_flag")
load("//:BUILD.bzl",
    "REPO_ARCHIVE_OPTS",
    "REPO_NS_MODULE_OPTS",
)
load(":BUILD.bzl",
    "PKG_ARCHIVE_OPTS",
    "PKG_NS_MODULE_OPTS"
)


################################################################
## STANZA 1: LIBRARY REMOVE_SNARK_KEYS_TRIGGER
################################################################
REMOVE_SNARK_KEYS_TRIGGER_ARCHIVE_OPTS = REPO_ARCHIVE_OPTS + PKG_ARCHIVE_OPTS + []
REMOVE_SNARK_KEYS_TRIGGER_NS_MODULE_OPTS = REPO_NS_MODULE_OPTS + PKG_NS_MODULE_OPTS

REMOVE_SNARK_KEYS_TRIGGER_DEPS = [
        # do not sort (buildifier)
          "@snarky//src/base:snarky_backendless",
]

REMOVE_SNARK_KEYS_TRIGGER_PPX = "@//bzl/ppx:ppx.exe[ppx_version][bisect_ppx]"
REMOVE_SNARK_KEYS_TRIGGER_PPX_ARGS = [
       # do not sort (buildifier)
        "--conditional", 
 ]

##############
ocaml_archive(
    name = "remove_snark_keys_trigger",
    opts = REMOVE_SNARK_KEYS_TRIGGER_ARCHIVE_OPTS,
    visibility = ["//visibility:public"],
    deps = REMOVE_SNARK_KEYS_TRIGGER_DEPS + [
        # do not sort (buildifier)
    ],
)

#########
ocaml_ns(
    name = "Remove_snark_keys_trigger_ns",
    ns="remove_snark_keys_trigger"

)

###################################################################
######## Configuration Settings - see :BUILD.bzl #################
bool_flag( name = "always-link", build_setting_default = False )
config_setting(name = "enable_always_link", flag_values = {":always-link": str(True)})

bool_flag( name = "debug", build_setting_default = True )
config_setting(name = "enable_debug", flag_values = {":debug": str(True)})

bool_flag( name = "threads", build_setting_default = True )
config_setting(name = "enable_threads", flag_values = {":threads": str(True)})

bool_flag( name = "tooling", build_setting_default = False )
config_setting(name = "enable_tooling", flag_values = {":tooling": str(True)})

bool_flag( name = "verbose", build_setting_default = False )
config_setting(name = "enable_verbose", flag_values = {":verbose": str(True)})

## PPX control
string_flag( name = "ppx-out", build_setting_default = "binary", values = ["binary", "text"])
config_setting( name = "enable_ppx_output_format_text",   flag_values = { ":ppx-out": "text" })
config_setting( name = "enable_ppx_output_format_binary", flag_values = { ":ppx-out": "binary" })
################################################################
TOOL = "//src/lib/snark_keys/remove_snark_keys_trigger/clear_keys:clear_keys.exe"
genrule(
    name = "gensrcs",
    outs = ["remove_keys_trigger.ml"],
    tools = [TOOL],
    cmd = "\n".join([
        "$(location {tool})".format(tool=TOOL),
        "cp remove_keys_trigger.ml \"$@\"",
    ]),
)
