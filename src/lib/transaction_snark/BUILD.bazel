## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_interface",
    "ocaml_module",
    "ppx_executable",
)
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "string_flag")
load(
    "//:BUILD.bzl",
    "REPO_INTERFACE_OPTS",
    "REPO_MODULE_OPTS",
    "REPO_PPX_EXECUTABLE_OPTS",
)
load(
    ":BUILD.bzl",
    "PKG_INTERFACE_OPTS",
    "PKG_MODULE_OPTS",
    "PKG_PPX_EXECUTABLE_OPTS",
)

THIS_PPX_EXECUTABLE_OPTS = REPO_PPX_EXECUTABLE_OPTS + PKG_PPX_EXECUTABLE_OPTS

## stanza_singleton_ocaml.mustache
TRANSACTION_SNARK_INTERFACE_OPTS = REPO_INTERFACE_OPTS + PKG_INTERFACE_OPTS

TRANSACTION_SNARK_MODULE_OPTS = REPO_MODULE_OPTS + PKG_MODULE_OPTS

#############
ocaml_module(
    name = "transaction_snark",
    src = "transaction_snark.ml",
    intf = ":_Transaction_snark.cmi",
    opts = TRANSACTION_SNARK_MODULE_OPTS,
    ppx = ":ppx.exe",
    ppx_args = [
        # do not sort (buildifier)
        "--conditional",
        "-inline-test-lib",
        "transaction_snark",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@mina//src/lib/cache_dir",
        "@mina//src/lib/coda_base",
        "@mina//src/lib/coda_state",
        "@mina//src/lib/sgn",
        "@mina//src/lib/transaction_protocol_state",
        "@opam//pkg:bignum",
        "@opam//pkg:core",
        "@ppx_version//src/runtime:ppx_version_runtime",
        "@snarky//src/base:snarky_backendless",
    ],
)

################
ocaml_interface(
    name = "_Transaction_snark.cmi",
    src = "transaction_snark.mli",
    opts = REPO_INTERFACE_OPTS + PKG_INTERFACE_OPTS,
    ppx = ":ppx.exe",
    ppx_args = [
        # do not sort (buildifier)
        "--conditional",
        "-inline-test-lib",
        "transaction_snark",
    ],
    deps = [
        "@mina//src/lib/cache_dir",
        "@mina//src/lib/coda_base",
        "@mina//src/lib/coda_state",
        "@mina//src/lib/sgn",
        "@mina//src/lib/transaction_protocol_state",
        "@opam//pkg:bignum",
        "@opam//pkg:core",
        "@ppx_version//src/runtime:ppx_version_runtime",
        "@snarky//src/base:snarky_backendless",
    ],
)

###################################################################
######## Configuration Settings - see :BUILD.bzl #################
bool_flag(
    name = "always-link",
    build_setting_default = False,
)

config_setting(
    name = "enable_always_link",
    flag_values = {":always-link": str(True)},
)

bool_flag(
    name = "debug",
    build_setting_default = True,
)

config_setting(
    name = "enable_debug",
    flag_values = {":debug": str(True)},
)

bool_flag(
    name = "threads",
    build_setting_default = True,
)

config_setting(
    name = "enable_threads",
    flag_values = {":threads": str(True)},
)

bool_flag(
    name = "tooling",
    build_setting_default = False,
)

config_setting(
    name = "enable_tooling",
    flag_values = {":tooling": str(True)},
)

bool_flag(
    name = "verbose",
    build_setting_default = False,
)

config_setting(
    name = "enable_verbose",
    flag_values = {":verbose": str(True)},
)

## PPX control
string_flag(
    name = "ppx-out",
    build_setting_default = "binary",
    values = [
        "binary",
        "text",
    ],
)

config_setting(
    name = "enable_ppx_output_format_text",
    flag_values = {":ppx-out": "text"},
)

config_setting(
    name = "enable_ppx_output_format_binary",
    flag_values = {":ppx-out": "binary"},
)

###############
ppx_executable(
    name = "ppx.exe",
    lazy_deps = [
        "@opam//pkg:ppx_expect.collector",
        "@opam//pkg:yojson",
        "@opam//pkg:ppx_hash.runtime-lib",
        "@opam//pkg:ppx_deriving_yojson.runtime",
        "@opam//pkg:ppx_sexp_conv.runtime-lib",
        "@opam//pkg:ppx_deriving.runtime",
        "@opam//pkg:ppx_assert.runtime-lib",
        "@opam//pkg:ppx_compare.runtime-lib",
        "@opam//pkg:ppx_inline_test.runtime-lib",
        "@opam//pkg:ppx_bench.runtime-lib",
        "@opam//pkg:bisect_ppx.runtime",
        "@opam//pkg:ppx_enumerate.runtime-lib",
        "@opam//pkg:ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx:driver",
    opts = THIS_PPX_EXECUTABLE_OPTS,
    visibility = [
        "//src/lib/transaction_snark:__pkg__",
    ],
    deps = [
        "@opam//pkg:bisect_ppx",
        "@opam//pkg:ppx_deriving.std",
        "@opam//pkg:ppx_deriving_yojson",
        "@opam//pkg:ppx_jane",
        "@ppx_version//src:ppx_version",
        "@snarky//h_list/ppx:ppx_h_list",
        "@snarky//ppx:ppx_snarky",
    ],
)
