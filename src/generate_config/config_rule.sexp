(rule
 (targets config.mlh)
 (mode fallback)
 (deps
  (source_tree ../config)
  (env_var MINA_COMPILE_CONFIG)
  (env_var ACCOUNT_CREATION_FEE)
  (env_var DEFAULT_TXN_FEE)
  (env_var MIN_TXN_FEE)
  (env_var DEFAULT_SNARK_FEE)
  (env_var COINBASE_AMOUNT)
  (env_var CONSENSUS_K)
  (env_var CONSENSUS_DELTA)
  (env_var BLOCK_WINDOW_DURATION)
  (env_var SLOTS_PER_EPOCH)
  (env_var SLOTS_PER_SUB_WINDOW)
  (env_var SUB_WINDOWS_PER_WINDOW)
  (env_var FEATURE_SNAPPS)
  (env_var FEATURE_TOKENS)
  (env_var FEATURE_PLUGINS)
  (env_var FEATURE_MAINNET_SIGNATURES)
  (env_var FEATURE_TIME_OFFSETS)
  (env_var FEATURE_INTEGRATION_TESTS)
  (env_var FEATURE_FORCE_UPDATES)
  (env_var DOWNLOAD_SNARK_KEYS)
  (env_var GENESIS_LEDGER)
  (env_var GENESIS_STATE_TIMESTAMP)
  (env_var GENERATE_GENESIS_PROOF)
  (env_var PRINT_VERSIONED_TYPES)
  (env_var DAEMON_EXPIRY)
  (env_var INTEGRATION_TEST_FULL_EPOCH)
  (env_var DEBUGGING_LOGS)
  (env_var DEBUGGING_LOG_CALLS)
  (env_var DEBUGGING_TRACING)
  (env_var DEBUGGING_CACHE_EXCEPTIONS)
  (env_var DEBUGGING_ASYNC_BACKTRACES)
  (env_var LEDGER_DEPTH)
  (env_var GC_COMPACT_INTERVAL)
  (env_var PROTOCOL_VERSION)
  (env_var PROOF_LEVEL))
 (action (run %{exe:generate_config.exe} --profile=%{profile})))