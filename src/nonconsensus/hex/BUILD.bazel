## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns",
)
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "string_flag")
load(
    "//:BUILD.bzl",
    "REPO_ARCHIVE_OPTS",
    "REPO_MODULE_OPTS",
    "REPO_NS_MODULE_OPTS",
)
load(
    ":BUILD.bzl",
    "PKG_ARCHIVE_OPTS",
    "PKG_MODULE_OPTS",
    "PKG_NS_MODULE_OPTS",
)

################################################################
## STANZA 1: LIBRARY HEX_NONCONSENSUS
################################################################
HEX_NONCONSENSUS_MODULE_OPTS = REPO_MODULE_OPTS + PKG_MODULE_OPTS

HEX_NONCONSENSUS_ARCHIVE_OPTS = REPO_ARCHIVE_OPTS + PKG_ARCHIVE_OPTS + []

HEX_NONCONSENSUS_NS_MODULE_OPTS = REPO_NS_MODULE_OPTS + PKG_NS_MODULE_OPTS

HEX_NONCONSENSUS_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core_kernel",
]

HEX_NONCONSENSUS_PPX = "@//bzl/ppx:ppx.exe[ppx_jane][ppx_version][ppx_inline_test][bisect_ppx]"

HEX_NONCONSENSUS_PPX_ARGS = [
    # do not sort (buildifier)
    "--conditional",
    "-inline-test-lib",
    "hex_nonconsensus",
]

##############
ocaml_archive(
    name = "hex_nonconsensus",
    opts = HEX_NONCONSENSUS_ARCHIVE_OPTS,
    visibility = ["//visibility:public"],
    deps = HEX_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Hex",
    ],
)

#########
ocaml_ns(
    name = "Hex_nonconsensus_ns",
    ns = "hex_nonconsensus",
    opts = HEX_NONCONSENSUS_NS_MODULE_OPTS,
    submodules = [
        # do not sort (buildifier)
        "hex.ml",
    ],
)

#############
ocaml_module(
    name = "_Hex",
    src = "hex.ml",
    ns = ":Hex_nonconsensus_ns",
    opts = HEX_NONCONSENSUS_MODULE_OPTS,
    ppx = HEX_NONCONSENSUS_PPX,
    ppx_args = HEX_NONCONSENSUS_PPX_ARGS,
    deps = HEX_NONCONSENSUS_DEPS,
)

###################################################################
######## Configuration Settings - see :BUILD.bzl #################
bool_flag(
    name = "always-link",
    build_setting_default = False,
)

config_setting(
    name = "enable_always_link",
    flag_values = {":always-link": str(True)},
)

bool_flag(
    name = "debug",
    build_setting_default = True,
)

config_setting(
    name = "enable_debug",
    flag_values = {":debug": str(True)},
)

bool_flag(
    name = "threads",
    build_setting_default = True,
)

config_setting(
    name = "enable_threads",
    flag_values = {":threads": str(True)},
)

bool_flag(
    name = "tooling",
    build_setting_default = False,
)

config_setting(
    name = "enable_tooling",
    flag_values = {":tooling": str(True)},
)

bool_flag(
    name = "verbose",
    build_setting_default = False,
)

config_setting(
    name = "enable_verbose",
    flag_values = {":verbose": str(True)},
)

## PPX control
string_flag(
    name = "ppx-out",
    build_setting_default = "binary",
    values = [
        "binary",
        "text",
    ],
)

config_setting(
    name = "enable_ppx_output_format_text",
    flag_values = {":ppx-out": "text"},
)

config_setting(
    name = "enable_ppx_output_format_binary",
    flag_values = {":ppx-out": "binary"},
)
